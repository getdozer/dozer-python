# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import pydozer.auth_pb2 as auth__pb2


class AuthGrpcServiceStub(object):
    """*
    AuthGrpcService allows developers to generate JWT token for restricted access to data.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.getAuthToken = channel.unary_unary(
                '/dozer.auth.AuthGrpcService/getAuthToken',
                request_serializer=auth__pb2.GetAuthTokenRequest.SerializeToString,
                response_deserializer=auth__pb2.GetAuthTokenResponse.FromString,
                )


class AuthGrpcServiceServicer(object):
    """*
    AuthGrpcService allows developers to generate JWT token for restricted access to data.
    """

    def getAuthToken(self, request, context):
        """Creates auth token with custom access
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_AuthGrpcServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'getAuthToken': grpc.unary_unary_rpc_method_handler(
                    servicer.getAuthToken,
                    request_deserializer=auth__pb2.GetAuthTokenRequest.FromString,
                    response_serializer=auth__pb2.GetAuthTokenResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'dozer.auth.AuthGrpcService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class AuthGrpcService(object):
    """*
    AuthGrpcService allows developers to generate JWT token for restricted access to data.
    """

    @staticmethod
    def getAuthToken(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/dozer.auth.AuthGrpcService/getAuthToken',
            auth__pb2.GetAuthTokenRequest.SerializeToString,
            auth__pb2.GetAuthTokenResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
